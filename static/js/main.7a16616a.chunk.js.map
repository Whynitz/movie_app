{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","id","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA4BeA,MAxBf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,iBCmCGC,G,kNA3CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAC3C,yEAFQ,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OAGrB,EAAKM,SAAS,CAACN,SAAQD,WAAU,IAJvB,2C,uDAOZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OAAO,yBAASV,UAAU,YAAnB,SACJS,EAAa,qBAAKT,UAAU,SAAf,SACZ,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SAEIU,EAAOP,KAAI,SAAAe,GACT,OAAO,cAAC,EAAD,CAELvB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QALPmB,EAAME,e,GA5BXC,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a16616a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key={index} className=\"genres__genre\">{genre}</li>\r\n                ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,150)} ...</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie","import React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Movie from './Movie';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const {data :{data :{movies}}} = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n      );\n    this.setState({movies, isLoading:false}) \n  };\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    const {isLoading, movies} = this.state;\n    return <section className=\"container\">\n      {isLoading ? (<div className=\"loader\">\n        <span className=\"loader__text\">loading...</span>\n      </div>\n      ) : (\n        <div className=\"movies\">\n          {\n            movies.map(movie => {\n              return <Movie \n                key = {movie.id}\n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            })\n          }\n        </div>\n      )\n      }\n    </section>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}